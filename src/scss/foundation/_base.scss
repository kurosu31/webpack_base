// ==============================
// 変数
// ==============================
$font-color_default: #777;
$font-color_header: #cecece;
$font-color_date: #e37b89; // TODO:リファクタ必要 OK!
$color_corp: #e3a8b1;
$font-color_sub1: #b6a489;
$font-color_slide: #fffcf8;
$font-color_link:#52252b;
$site-width: 980px;
$font-size_s: 12px;
$font-size_m: 14px;
$font-size_default: 16px;
$font-size_l: 18px;
$font-size_xl: 24px;
$font-size_xxl: 30px;
$font-size_3l: 38px;
$space_s: 5px;
$space_m: 10px;
$space_l: 15px;
$space_xl: 20px;
$space_xxl: 30px;
$space_3l: 40px;
$font-family_corp: 'Special Elite',
cursive;
$font-family_total:Quicksand,
游ゴシック体,
"Yu Gothic",
YuGothic,
"ヒラギノ角ゴシック Pro",
"Hiragino Kaku Gothic Pro",
メイリオ,
Meiryo,
Osaka,
"ＭＳ Ｐゴシック",
"MS PGothic",
sans-serif;
$bgColor: #f8f7fc;
// メディアクエリのブレークポイント設定
//@media screen and (max-width: 414px){
//  .btn{
//    font-size: .7em;
//  }
//}
// 通常、変数として設定しておくと後々変更しやすくて便利
//  !defaultはすでに変数に値が入っていた場合は何もせず、変数に値が入っていない時に割り当てられるもの
// https://hail2u.net/blog/webdesign/how-to-use-bang-default-flag-in-sass-and-how-it-works.html
//$breakpoint-sm: 400px !default;
//$breakpoint-md: 768px !default;
//$breakpoint-lg: 1000px !default;
// マップ型変数を使うと便利
$breakpoints: ( 'sm': 'screen and (max-width: 414px)', 'md': 'screen and (max-width: 768px)', 'lg': 'screen and (max-width: 1000px)', 'xl': 'screen and (max-width: 1200px)', ) !default;
// ==============================
// mixin
// ==============================
// @mixinは関数のようなものを作れる
// https://www.webcreatorbox.com/tech/sass-mixin
// map-get()の第一引数に変数名、第二引数にマップ型のキーを渡すと、マップ型の値が返る
// #{}は「インターポーレーション」といって、演算できない箇所、変数使えない箇所でも使えるようにするものcalcなどでよく使う
// http://book.scss.jp/code/c4/08.html
@mixin mq($breakpoint: sm) {
    @media #{map-get($breakpoints, $breakpoint)} {
        @content;
    }
}

@mixin md($breakpoint: md) {
    @media #{map-get($breakpoints, $breakpoint)} {
        @content;
    }
}

@mixin lg($breakpoint: lg) {
    @media #{map-get($breakpoints, $breakpoint)} {
        @content;
    }
}

// ==================================
// base
// ==================================
html,
body {
    width: 100%;
    color: $font-color_default;
    font-size: $font-size_default;
    line-height: 1.6;
    font-family: $font-family_total; // TODO:リファクタ必要（変数にする）ok!
    text-size-adjust: 100%;
    letter-spacing: 0.1em;
}

p,
a {
    -webkit-font-smoothing: antialiased;
}

a {
    color: $font-color_default;
    text-decoration: none;
    transition: .3s;
}

a:hover {
    color: $color_corp;
    transition: .3s;
}

img {
    width: 100%;
    vertical-align: bottom;
}